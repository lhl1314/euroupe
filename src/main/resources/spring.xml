<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <import resource="classpath:qq_send_mail.xml"/>
    <!--********************************************配置Spring***************************************-->
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.ouqicha">
        <!-- 扫描时跳过 @Controller 注解的JAVA类（控制器） -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>

    </context:component-scan>


    <!--********************************************配置hibernate********************************************-->

    <!--扫描配置文件(这里指向的是之前配置的那个config.properties)-->
    <context:property-placeholder location="classpath:/config.properties" />

    <!--配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />  <!--数据库连接驱动-->
        <property name="jdbcUrl" value="${jdbc.url}" />     <!--数据库地址-->
        <property name="user" value="${jdbc.username}" />   <!--用户名-->
        <property name="password" value="${jdbc.password}" />   <!--密码-->
        <property name="maxPoolSize" value="40" />      <!--最大连接数-->
        <property name="minPoolSize" value="1" />       <!--最小连接数-->
        <property name="initialPoolSize" value="10" />      <!--初始化连接池内的数据库连接-->
        <property name="maxIdleTime" value="20" />  <!--最大空闲时间-->
    </bean>

    <!--配置session工厂-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.ouqicha.europebusiness.bean.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> <!--hibernate根据实体自动生成数据库表-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>   <!--指定数据库方言-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>     <!--在控制台显示执行的数据库操作语句-->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/europe</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                <!--<prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/europe</prop>-->
                <!--<prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>   -->


            </props>
        </property>
    </bean>

    <!-- 事物管理器配置  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/back/toLogin" />
        <!--<property name="successUrl" value="/login/loginSuccessFull" />-->
        <!--针对后台，成功页面的路径-->
        <property name="successUrl" value="/back/toHome" />
        <property name="unauthorizedUrl" value="/login/unauthorized" />
        <property name="filterChainDefinitions">
            <value>
                <!--/home* = anon-->
                /register**=anon
                /login** = anon
                /api/userinfo/login** = anon
                /api/userinfo/register** = anon
                /api/** = authc
                /back/login** = anon
                / = authc
                <!--/logout = logout-->
                <!--/role/** = roles[back]-->
                <!--/permission/** = perms[permssion:look]-->
                <!--/** = authc-->
            </value>
        </property>
    </bean>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 单realm应用。如果有多个realm，使用‘realms’属性代替 -->
        <property name="realm" ref="sampleRealm" />
        <property name="cacheManager" ref="cacheManager" />
        <property name="sessionManager" ref="sessionManager"></property>
    </bean>
    <!--<bean id="sampleRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="authenticationQuery"-->
                  <!--value="select t.password from account t where t.mobile = ?" />-->
        <!--<property name="userRolesQuery"-->
                  <!--value="select a.role_name from account_role t left join role a on t.role_id = a.id where t.account_id = ? " />-->
        <!--<property name="permissionsQuery"-->
                  <!--value="SELECT B.PERMISSION FROM MY_ROLE T LEFT JOIN MY_ROLE_PERMISSION A ON T.ID = A.ROLE_ID LEFT JOIN MY_PERMISSION B ON A.PERMISSION = B.ID WHERE T.ROLENAME = ? " />-->
        <!--<property name="permissionsLookupEnabled" value="true" />-->
        <!--<property name="saltStyle" value="NO_SALT" />-->
        <!--<property name="credentialsMatcher" ref="hashedCredentialsMatcher" />-->
    <!--</bean>-->

    <bean id="sampleRealm" class="com.ouqicha.europebusiness.shiro.CustomRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <!--指定加密算法-->
                <property name="hashAlgorithmName" value="MD5"/>
                <!--指定对密码连续进行5轮md5加密-->
                <!--<property name="hashIterations" value="5"/>-->
            </bean>
        </property>
    </bean>


    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!-- 设置ehcache缓存的配置文件 -->
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <bean id="hashedCredentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5" />
        <property name="storedCredentialsHexEncoded" value="true" />
        <property name="hashIterations" value="1" />
    </bean>

    <!-- Session ID 生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator">
    </bean>

    <!-- Session DAO 继承自EnterpriseCacheSessionDAO-->
    <bean id="sessionDAO" class="com.ouqicha.europebusiness.dao.SessionEntityDao">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>

    </bean>
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/> <!-- Session失效时长，单位毫秒 -->
        <property name="sessionValidationInterval" value="10000"/><!-- 相隔多久检查一次session的有效性   -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 是否定期检查Session的有效性 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookie" ref="simpleCookie"/>
    </bean>
    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--<constructor-arg name="name" value="shiro.sesssion"/>-->
        <constructor-arg name="name" value="jeesite.session.id"/><!--新增加-->
        <!--<property name="name" value="shiroUserid" />&lt;!&ndash;解决sessionId找不到的问题&ndash;&gt;-->
        <property name="path" value="/"/>
    </bean>



    <bean id="mapper" class="org.dozer.spring.DozerBeanMapperFactoryBean">
        <property name="mappingFiles">
            <list>
                <value>classpath:dozer-mapping.xml</value>
            </list>
        </property>
    </bean>


</beans>